name: CI/CD
on: [ push, pull_request ]

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.64
          args: --config=.golangci.yaml ./...

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-22.04
    container:
      image: golang:1.23
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Run unit tests
        run: |
          make unit-test

  integration_test:
    name: Integration test
    needs: unit_tests
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_DB: pvz_service_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Run integration test
        run: |
          make integration-test